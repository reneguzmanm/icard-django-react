{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\components\\\\Admin\\\\Payments\\\\TablePayments\\\\TablePayments.js\";\nimport React from 'react';\nimport { Table, Button, Icon, Tab } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport moment from \"moment\";\nimport { ModalBasic } from \"../../../Common\";\nimport \"./TablePayments.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TablePayments(props) {\n  const {\n    payments\n  } = props;\n\n  const getIconPaymentName = key => {\n    if (key == \"CARD\") return \"credit card outline\";\n    if (key == \"CASH\") return \"money bill alternate outline\";\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      className: \"table-payments-admin\",\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Mesa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Tipo de pago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: map(payments, (payment, index) => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: payment.table_data.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: payment.table\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: [\"$ \", payment.totalPayment]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: getIconPaymentName(payment.paymentType)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: moment(payment.created_at).format(\"DD/MM/YYYY - HH:MM\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            textAlign: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: true,\n              onClick: () => console.log(\"Ver detalles\"),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"eye\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModalBasic, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = TablePayments;\n\nvar _c;\n\n$RefreshReg$(_c, \"TablePayments\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/components/Admin/Payments/TablePayments/TablePayments.js"],"names":["React","Table","Button","Icon","Tab","map","moment","ModalBasic","TablePayments","props","payments","getIconPaymentName","key","payment","index","table_data","number","table","totalPayment","paymentType","created_at","format","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Table, Button, Icon, Tab } from 'semantic-ui-react';\r\nimport { map } from 'lodash';\r\nimport moment from \"moment\";\r\nimport { ModalBasic } from \"../../../Common\";\r\nimport \"./TablePayments.scss\";\r\n\r\nexport function TablePayments(props) {\r\n    const {payments} = props;\r\n\r\n    const getIconPaymentName = (key) =>{\r\n        if(key == \"CARD\") return \"credit card outline\";\r\n        if(key == \"CASH\") return \"money bill alternate outline\";\r\n        return null;\r\n\r\n    }\r\n\r\n  return (\r\n      <>\r\n        <Table className='table-payments-admin'>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>ID</Table.HeaderCell>\r\n                    <Table.HeaderCell>Mesa</Table.HeaderCell>\r\n                    <Table.HeaderCell>Total</Table.HeaderCell>\r\n                    <Table.HeaderCell>Tipo de pago</Table.HeaderCell>\r\n                    <Table.HeaderCell>Fecha</Table.HeaderCell>\r\n                    <Table.HeaderCell></Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {map(payments, (payment, index) =>(\r\n                    <Table.Row key={index}>\r\n                        <Table.Cell>{payment.table_data.number}</Table.Cell>\r\n                        <Table.Cell>{payment.table}</Table.Cell>\r\n                        <Table.Cell>$ {payment.totalPayment}</Table.Cell>\r\n                        <Table.Cell>\r\n                            <Icon name={getIconPaymentName(payment.paymentType)} />    \r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {moment(payment.created_at).format(\"DD/MM/YYYY - HH:MM\")}\r\n                        </Table.Cell>\r\n                        <Table.Cell textAlign='right'>\r\n                            <Button icon onClick={()=> console.log(\"Ver detalles\")} >\r\n                                <Icon name='eye' />\r\n                            </Button>\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                ))}\r\n            </Table.Body>\r\n        </Table>\r\n        <ModalBasic />\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}