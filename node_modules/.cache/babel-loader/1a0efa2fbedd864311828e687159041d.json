{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\pages\\\\Client\\\\OrdersHistory.js\",\n    _s = $RefreshSig$();\n\nimport { forEach, map, size } from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useOrder, useTable } from \"../../hooks\";\nimport { OrderHistoryItem } from '../../components/Client/';\nimport { ModalConfirm } from \"../../components/Common\";\nimport { Button } from 'semantic-ui-react';\nimport { number } from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function OrdersHistory() {\n  _s();\n\n  const [idTable, setIdTable] = useState(null);\n  const [showTypePayment, setShowTypePayment] = useState(false);\n  const {\n    getOrdersByTable,\n    loading,\n    orders\n  } = useOrder();\n  const {\n    getTableByNumber\n  } = useTable();\n  const {\n    tableNumber\n  } = useParams();\n  useEffect(() => {\n    (async () => {\n      const table = await getTableByNumber(tableNumber);\n      const idTable = table[0].id;\n      getOrdersByTable(idTable, \"\", \"ordering=-status,-created_at\");\n    })();\n  }, []);\n\n  const onCreatePayment = paymentType => {\n    setShowTypePayment(false);\n    let totalPayment = 0;\n    forEach(orders, order => {\n      totalPayment += Number(order.product_data.price);\n    });\n    console.log(paymentType);\n  };\n\n  const paymentData = {\n    table: idTable,\n    totalPayment: totalPayment.toFixed(2),\n    paymentType,\n    statusPayment: \"PENDING\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Historial de pedidos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [size(orders) > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        fluid: true,\n        onClick: () => setShowTypePayment(true),\n        children: \"Pedir la cuenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this), map(orders, order => /*#__PURE__*/_jsxDEV(OrderHistoryItem, {\n        order: order\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ModalConfirm, {\n      title: \"Pagar con tarjeta o efectivo\",\n      show: showTypePayment,\n      onCloseText: \"Efectivo\",\n      onClose: () => onCreatePayment('CASH'),\n      onConfirmText: \"Tarjeta\",\n      onConfirm: () => onCreatePayment('CARD')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrdersHistory, \"EtH23Ef5/As1zwv8acTa1dZVvv4=\", false, function () {\n  return [useOrder, useTable, useParams];\n});\n\n_c = OrdersHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersHistory\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/pages/Client/OrdersHistory.js"],"names":["forEach","map","size","React","useState","useEffect","useParams","useOrder","useTable","OrderHistoryItem","ModalConfirm","Button","number","OrdersHistory","idTable","setIdTable","showTypePayment","setShowTypePayment","getOrdersByTable","loading","orders","getTableByNumber","tableNumber","table","id","onCreatePayment","paymentType","totalPayment","order","Number","product_data","price","console","log","paymentData","toFixed","statusPayment"],"mappings":"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","sourcesContent":["import { forEach, map, size } from 'lodash';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useOrder, useTable } from \"../../hooks\";\r\nimport { OrderHistoryItem } from '../../components/Client/';\r\nimport { ModalConfirm } from \"../../components/Common\";\r\nimport { Button } from 'semantic-ui-react';\r\nimport { number } from 'yup';\r\n\r\nexport function OrdersHistory() {\r\n    const [idTable, setIdTable] = useState(null)\r\n    const [showTypePayment, setShowTypePayment] = useState(false)\r\n    const { getOrdersByTable, loading, orders } = useOrder();\r\n    const { getTableByNumber } = useTable();\r\n    const { tableNumber } = useParams();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const table = await getTableByNumber(tableNumber);\r\n            const idTable = table[0].id;\r\n\r\n            getOrdersByTable(idTable, \"\", \"ordering=-status,-created_at\");\r\n        })();\r\n    }, []);\r\n\r\n    const onCreatePayment = (paymentType) =>{\r\n        setShowTypePayment(false);\r\n        \r\n        let totalPayment = 0;\r\n        forEach(orders, (order) =>{\r\n            totalPayment += Number(order.product_data.price);\r\n        });\r\n        console.log(paymentType);\r\n    }\r\n\r\n    const paymentData = {\r\n        table: idTable,\r\n        totalPayment: totalPayment.toFixed(2),\r\n        paymentType,\r\n        statusPayment: \"PENDING\",\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Historial de pedidos</h1>\r\n            {\r\n                loading ? (\r\n                    <p>Cargando...</p>\r\n                ) : (\r\n                    <>\r\n                        {size(orders) > 0 && (\r\n                            <Button primary fluid onClick={() => setShowTypePayment(true)}>\r\n                                Pedir la cuenta\r\n                            </Button>\r\n                        )}\r\n                        {map(orders, (order) => (\r\n                            <OrderHistoryItem key={order.id} order={order} />\r\n                        ))}\r\n                    </>\r\n                )}\r\n            <ModalConfirm\r\n                title=\"Pagar con tarjeta o efectivo\"\r\n                show={showTypePayment}\r\n                onCloseText=\"Efectivo\"\r\n                onClose={() => onCreatePayment('CASH')}\r\n                onConfirmText=\"Tarjeta\"\r\n                onConfirm={() => onCreatePayment('CARD')}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}