{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { getOrdersByTableApi, checkDeliveredApi, AddOrderToTableApi, addPaymentToOrderApi, closeOrderApi } from \"../api/orders\";\nexport function useOrder() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [orders, setOrders] = useState(null);\n\n  const getOrdersByTable = async (idTable, status, ordering) => {\n    try {\n      setLoading(true);\n      const response = await getOrdersByTableApi(idTable, status, ordering);\n      setLoading(false);\n      setOrders(response);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  const checkDeliveredOrder = async idOrder => {\n    try {\n      await checkDeliveredApi(idOrder);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const addOrderToTable = async (idTable, idProduct) => {\n    try {\n      await AddOrderToTableApi(idTable, idProduct);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const addPaymentToOrder = async (idOrder, idPayment) => {\n    try {\n      await addPaymentToOrderApi(idOrder, idPayment);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const closeOrder = async idOrder => {\n    try {\n      await close;\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return {\n    loading,\n    error,\n    orders,\n    getOrdersByTable,\n    checkDeliveredOrder,\n    addOrderToTable,\n    addPaymentToOrder\n  };\n}\n\n_s(useOrder, \"18VbEdStdE1T3ZBCxKSB7919Pdk=\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/hooks/useOrder.js"],"names":["useState","getOrdersByTableApi","checkDeliveredApi","AddOrderToTableApi","addPaymentToOrderApi","closeOrderApi","useOrder","loading","setLoading","error","setError","orders","setOrders","getOrdersByTable","idTable","status","ordering","response","checkDeliveredOrder","idOrder","addOrderToTable","idProduct","addPaymentToOrder","idPayment","closeOrder","close"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SACIC,mBADJ,EAEIC,iBAFJ,EAGIC,kBAHJ,EAIIC,oBAJJ,EAKIC,aALJ,QAMQ,eANR;AAQA,OAAO,SAASC,QAAT,GAAmB;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMa,gBAAgB,GAAG,OAAOC,OAAP,EAAgBC,MAAhB,EAAwBC,QAAxB,KAAqC;AAC1D,QAAI;AACAR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMS,QAAQ,GAAG,MAAMhB,mBAAmB,CAACa,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAA1C;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,SAAS,CAACK,QAAD,CAAT;AACH,KALD,CAKE,OAAOR,KAAP,EAAc;AACZD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,GAVD;;AAYA,QAAMS,mBAAmB,GAAG,MAAOC,OAAP,IAAkB;AAC1C,QAAI;AACA,YAAMjB,iBAAiB,CAACiB,OAAD,CAAvB;AACH,KAFD,CAEE,OAAOV,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,GAND;;AAQA,QAAMW,eAAe,GAAE,OAAON,OAAP,EAAgBO,SAAhB,KAA8B;AACjD,QAAI;AACD,YAAMlB,kBAAkB,CAACW,OAAD,EAAUO,SAAV,CAAxB;AACF,KAFD,CAEE,OAAOZ,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,GAND;;AAQA,QAAMa,iBAAiB,GAAG,OAAOH,OAAP,EAAgBI,SAAhB,KAA6B;AACnD,QAAI;AACA,YAAMnB,oBAAoB,CAACe,OAAD,EAAUI,SAAV,CAA1B;AACH,KAFD,CAEE,OAAOd,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,GAND;;AAOA,QAAMe,UAAU,GAAG,MAAOL,OAAP,IAAmB;AAClC,QAAI;AACA,YAAMM,KAAN;AACH,KAFD,CAEE,OAAOhB,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,GAND;;AAOA,SAAM;AACFF,IAAAA,OADE;AAEFE,IAAAA,KAFE;AAGFE,IAAAA,MAHE;AAIFE,IAAAA,gBAJE;AAKFK,IAAAA,mBALE;AAMFE,IAAAA,eANE;AAOFE,IAAAA;AAPE,GAAN;AASH;;GAxDehB,Q","sourcesContent":["import { useState } from \"react\";\r\nimport { \r\n    getOrdersByTableApi, \r\n    checkDeliveredApi, \r\n    AddOrderToTableApi, \r\n    addPaymentToOrderApi,\r\n    closeOrderApi\r\n } from \"../api/orders\";\r\n\r\nexport function useOrder(){\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [orders, setOrders] = useState(null);\r\n\r\n    const getOrdersByTable = async (idTable, status, ordering) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await getOrdersByTableApi(idTable, status, ordering);\r\n            setLoading(false);\r\n            setOrders(response);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setError(error);\r\n        }\r\n    };\r\n\r\n    const checkDeliveredOrder = async (idOrder) =>{\r\n        try {\r\n            await checkDeliveredApi(idOrder);\r\n        } catch (error) {\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n    const addOrderToTable= async (idTable, idProduct) => {\r\n        try {\r\n           await AddOrderToTableApi(idTable, idProduct); \r\n        } catch (error) {\r\n            setError(error);\r\n        }\r\n    }\r\n    \r\n    const addPaymentToOrder = async (idOrder, idPayment) =>{\r\n        try {\r\n            await addPaymentToOrderApi(idOrder, idPayment);\r\n        } catch (error) {\r\n            setError(error);\r\n        }\r\n    }\r\n    const closeOrder = async (idOrder) => {\r\n        try {\r\n            await close\r\n        } catch (error) {\r\n            setError(error);\r\n        }\r\n    }\r\n    return{\r\n        loading,\r\n        error,\r\n        orders,\r\n        getOrdersByTable,\r\n        checkDeliveredOrder,\r\n        addOrderToTable,\r\n        addPaymentToOrder,\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}