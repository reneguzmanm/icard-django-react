{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\components\\\\Client\\\\ListProductCart\\\\ListProductCart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Image, Icon, Button } from 'semantic-ui-react';\nimport { map, forEach } from 'lodash';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useOrder, useTable } from \"../../../hooks\";\nimport { removeProductCartApi, cleanProductCartApi } from '../../../api/cart';\nimport \"./ListProductCart.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ListProductCart(props) {\n  _s();\n\n  let navigate = useNavigate();\n  const {\n    products,\n    onReloadCart\n  } = props;\n  const [total, setTotal] = useState(0);\n  const {\n    addOrderToTable\n  } = useOrder();\n  const {\n    getTableByNumber\n  } = useTable();\n  const {\n    tableNumber\n  } = useParams();\n  useEffect(() => {\n    let totalTemp = 0;\n    forEach(products, product => {\n      totalTemp += Number(product.price);\n    });\n    setTotal(totalTemp.toFixed(2));\n  }, [products]);\n\n  const removeProduct = index => {\n    removeProductCartApi(index);\n    onReloadCart();\n  };\n\n  const createOrder = async () => {\n    const tableData = await getTableByNumber(tableNumber);\n    const idTable = tableData[0].id;\n\n    for await (const product of products) {\n      await addOrderToTable(idTable, product.id);\n    }\n\n    cleanProductCartApi();\n    navigate(`/client/${tableNumber}/orders`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-product-cart\",\n    children: [map(products, (product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-product-cart__product\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          avatar: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), \"//\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: product.title.substring(0, 15)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"$ \", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"close\",\n        onClick: () => removeProduct(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      fluid: true,\n      onClick: createOrder,\n      children: [\"Realizar pedido ( $ \", total, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListProductCart, \"8+xK/N9E71y/J1eRhTUYwNIZZP8=\", false, function () {\n  return [useNavigate, useOrder, useTable, useParams];\n});\n\n_c = ListProductCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListProductCart\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/components/Client/ListProductCart/ListProductCart.js"],"names":["React","useState","useEffect","Image","Icon","Button","map","forEach","useParams","useNavigate","useOrder","useTable","removeProductCartApi","cleanProductCartApi","ListProductCart","props","navigate","products","onReloadCart","total","setTotal","addOrderToTable","getTableByNumber","tableNumber","totalTemp","product","Number","price","toFixed","removeProduct","index","createOrder","tableData","idTable","id","image","title","substring"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport { Image, Icon, Button } from 'semantic-ui-react';\r\nimport { map, forEach } from 'lodash';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useOrder, useTable } from \"../../../hooks\";\r\nimport { removeProductCartApi, cleanProductCartApi } from '../../../api/cart';\r\nimport \"./ListProductCart.scss\";\r\n\r\nexport function ListProductCart(props) {\r\n    let navigate = useNavigate();\r\n    const { products, onReloadCart } = props;\r\n    const [total, setTotal] = useState(0);\r\n    const { addOrderToTable } = useOrder();\r\n    const { getTableByNumber} = useTable();\r\n    const { tableNumber } = useParams();\r\n\r\n    useEffect(() => {\r\n        let totalTemp = 0;\r\n        forEach(products, (product) =>{\r\n            totalTemp += Number(product.price);\r\n        });\r\n        setTotal(totalTemp.toFixed(2));\r\n    }, [products]);\r\n    \r\n\r\n    const removeProduct = (index) =>{\r\n        removeProductCartApi(index);\r\n        onReloadCart();\r\n    }\r\n\r\n    const createOrder = async () => {\r\n        const tableData = await getTableByNumber(tableNumber);\r\n        const idTable = tableData[0].id\r\n        for await (const product of products){\r\n            await addOrderToTable(idTable, product.id);\r\n        }\r\n        cleanProductCartApi();\r\n        navigate(`/client/${tableNumber}/orders`);\r\n    }\r\n  return (\r\n    <div className='list-product-cart'>\r\n        {map(products, (product, index) =>(\r\n            <div key={index} className='list-product-cart__product'>\r\n                <div>\r\n                    <Image src={product.image} avatar />\r\n                    //<span>{product.title.substring(0,15)}</span>\r\n                    <span>{product.title}</span>\r\n                </div>\r\n                <span>$ {product.price}</span>\r\n                <Icon name='close' onClick={() => removeProduct(index)}/>\r\n            </div>\r\n        ))}\r\n        <Button primary fluid onClick={createOrder}>\r\n            Realizar pedido ( $ {total})\r\n        </Button>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}