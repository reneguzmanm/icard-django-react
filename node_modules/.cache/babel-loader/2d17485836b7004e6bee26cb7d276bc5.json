{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\pages\\\\Admin\\\\TableDetailsAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport { useParams } from 'react-router-dom';\nimport { ListOrderAdmin } from '../../components/Admin/TableDetails';\nimport { HeaderPage } from \"../../components/Admin\";\nimport { useOrder, useTable } from '../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TableDetailsAdmin() {\n  _s();\n\n  const [reloadOrders, setReloadOrders] = useState(false);\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    orders,\n    getOrdersByTable\n  } = useOrder();\n  const {\n    table,\n    getTable\n  } = useTable();\n  useEffect(() => {\n    getOrdersByTable(id, \"\", \"ordering=-status,created_at\");\n  }, [id, reloadOrders]);\n  useEffect(() => getTable(id), [id]);\n\n  const onReloadOrders = () => setReloadOrders(prev => !prev);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderPage, {\n      title: `Mesa ***`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n      active: true,\n      inline: \"centered\",\n      children: \"Cargando\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ListOrderAdmin, {\n      orders: orders,\n      onReloadOrders: onReloadOrders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TableDetailsAdmin, \"cEexNrmbt8qETipi+Id90EYffsA=\", false, function () {\n  return [useParams, useOrder, useTable];\n});\n\n_c = TableDetailsAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableDetailsAdmin\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/pages/Admin/TableDetailsAdmin.js"],"names":["React","useEffect","useState","Loader","useParams","ListOrderAdmin","HeaderPage","useOrder","useTable","TableDetailsAdmin","reloadOrders","setReloadOrders","id","loading","orders","getOrdersByTable","table","getTable","onReloadOrders","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,qCAA/B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,aAAnC;;;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAAA;;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAACU,IAAAA;AAAD,MAAOR,SAAS,EAAtB;AACA,QAAM;AAACS,IAAAA,OAAD;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAAsCR,QAAQ,EAApD;AACA,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBT,QAAQ,EAApC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,gBAAgB,CAACH,EAAD,EAAK,EAAL,EAAS,6BAAT,CAAhB;AACD,GAFQ,EAEN,CAACA,EAAD,EAAKF,YAAL,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAMgB,QAAQ,CAACL,EAAD,CAAf,EAAqB,CAACA,EAAD,CAArB,CAAT;;AAIA,QAAMM,cAAc,GAAG,MAAMP,eAAe,CAAEQ,IAAD,IAAU,CAACA,IAAZ,CAA5C;;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAG;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,OAAO,gBACN,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,MAAM,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAKN,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEC,MAAxB;AAAgC,MAAA,cAAc,EAAEI;AAAhD;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADF;AAYD;;GA5BeT,iB;UAEDL,S,EAC+BG,Q,EAChBC,Q;;;KAJdC,iB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Loader } from 'semantic-ui-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ListOrderAdmin } from '../../components/Admin/TableDetails';\r\nimport { HeaderPage } from \"../../components/Admin\";\r\nimport { useOrder, useTable } from '../../hooks';\r\n\r\nexport function TableDetailsAdmin() {\r\n  const [reloadOrders, setReloadOrders] = useState(false);\r\n  const {id} = useParams();\r\n  const {loading, orders, getOrdersByTable} = useOrder();\r\n  const { table, getTable } = useTable();\r\n\r\n  useEffect(() => {\r\n    getOrdersByTable(id, \"\", \"ordering=-status,created_at\")\r\n  }, [id, reloadOrders]);\r\n  \r\n  useEffect(() => getTable(id), [id])\r\n  \r\n\r\n\r\n  const onReloadOrders = () => setReloadOrders((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <HeaderPage title={`Mesa ***`} />\r\n      {loading ? (\r\n        <Loader active inline=\"centered\">\r\n          Cargando\r\n        </Loader>\r\n      ):(\r\n        <ListOrderAdmin orders={orders} onReloadOrders={onReloadOrders} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}