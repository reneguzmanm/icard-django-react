{"ast":null,"code":"import { functionsIn } from 'lodash';\nimport { BASE_API } from '../utils/constants';\nexport async function loginApi(formValue) {\n  try {\n    const url = `${BASE_API}/api/auth/login/`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formValue)\n    };\n    const response = await fetch(url, params);\n\n    if (response.status !== 200) {\n      throw new Error(\"Usuario o contraseña incorrectos\");\n    }\n\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function getMeApi(token) {\n  try {\n    const url = `${BASE_API}/api/auth/me/`;\n    const params = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function getUsersApi(token) {\n  try {\n    const url = `${BASE_API}/api/users`;\n    const params = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function addUserApi(data, token) {\n  try {\n    const url = `${BASE_API}/api/users/`;\n    const params = {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function updateUserApi(id, data, token) {\n  try {\n    const url = `${BASE_API}/api/users/${id}/`;\n    const params = {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function deleteUserApi(id, token) {\n  try {\n    const url = `${BASE_API}/api/users/${id}/`;\n    const params = {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n  } catch (error) {\n    throw error;\n  }\n}","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/api/user.js"],"names":["functionsIn","BASE_API","loginApi","formValue","url","params","method","headers","body","JSON","stringify","response","fetch","status","Error","result","json","error","getMeApi","token","Authorization","getUsersApi","addUserApi","data","updateUserApi","id","deleteUserApi"],"mappings":"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","sourcesContent":["import { functionsIn } from 'lodash';\r\nimport { BASE_API } from '../utils/constants';\r\n\r\nexport async function loginApi(formValue){\r\n    try{\r\n        const url = `${BASE_API}/api/auth/login/`;\r\n        const params = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(formValue),\r\n        };\r\n        const response = await fetch(url, params);\r\n\r\n        if(response.status !== 200){\r\n            throw new Error(\"Usuario o contraseña incorrectos\")\r\n        }\r\n        const result = await response.json();\r\n        return result;\r\n    } catch(error){\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getMeApi(token){\r\n    try {\r\n        const url = `${BASE_API}/api/auth/me/`;\r\n        const params = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const response = await fetch(url, params);\r\n        const result = await response.json()\r\n        return result;\r\n    } catch (error) {\r\n        throw error;        \r\n    }\r\n}\r\n\r\nexport async function getUsersApi(token){\r\n    try {\r\n        const url = `${BASE_API}/api/users`;\r\n        const params = {\r\n            headers:{\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        };\r\n        const response= await fetch(url, params);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function addUserApi(data, token){\r\n    try {\r\n        const url = `${BASE_API}/api/users/`;\r\n        const params = {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const response = await fetch(url, params);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        throw error;\r\n        \r\n    }\r\n}\r\n\r\nexport async function updateUserApi(id, data, token){\r\n    try {\r\n        const url = `${BASE_API}/api/users/${id}/`;\r\n        const params = {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const response = await fetch(url, params);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        throw error;\r\n        \r\n    }\r\n}\r\n\r\nexport async function deleteUserApi(id, token){\r\n    try {\r\n        const url = `${BASE_API}/api/users/${id}/`;\r\n        const params = {\r\n            method: \"DELETE\",\r\n            headers:{\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        };\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}