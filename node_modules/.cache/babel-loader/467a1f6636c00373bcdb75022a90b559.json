{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\pages\\\\Admin\\\\ProductAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport { HeaderPage, TableProductAdmin, AddEditProductForm } from \"../../components/Admin\";\nimport { useProduct } from '../../hooks';\nimport { ModalBasic } from \"../../components/Common\";\nimport { add, initial } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ProductAdmin() {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const [titleModal, setTitleModal] = useState(null);\n  const [contentModal, setContentModal] = useState(null);\n  const [refetch, setRefetch] = useState(false);\n  const {\n    loading,\n    products,\n    getProducts\n  } = useProduct();\n  useEffect(() => getProducts(), [refetch]);\n\n  const openCloseModal = () => setShowModal(prev => !prev);\n\n  const onRefetch = () => setRefetch(prev => !prev);\n\n  const addProduct = () => {\n    setTitleModal(\"Nuevo producto\");\n    setContentModal( /*#__PURE__*/_jsxDEV(AddEditProductForm, {\n      onClose: openCloseModal,\n      onRefetch: onRefetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this));\n    openCloseModal();\n  };\n\n  const updateProduct = data => {\n    setTitleModal(\"Actualizar Producto\");\n    setContentModal( /*#__PURE__*/_jsxDEV(AddEditProductForm, {\n      onClose: openCloseModal,\n      onRefetch: onRefetch,\n      product: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this));\n    openCloseModal();\n  };\n\n  const onDelete = data => {\n    const result = window.confirm;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderPage, {\n      title: \"Productos\",\n      btnTitle: \"Nuevo producto\",\n      btnClick: addProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n      active: true,\n      inline: \"centered\",\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(TableProductAdmin, {\n      products: products,\n      updateProduct: updateProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBasic, {\n      show: showModal,\n      onClose: openCloseModal,\n      title: titleModal,\n      children: contentModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProductAdmin, \"BbJzC1+4bp0zB/9XxtXAcDGvhrc=\", false, function () {\n  return [useProduct];\n});\n\n_c = ProductAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductAdmin\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/pages/Admin/ProductAdmin.js"],"names":["React","useEffect","useState","Loader","HeaderPage","TableProductAdmin","AddEditProductForm","useProduct","ModalBasic","add","initial","ProductAdmin","showModal","setShowModal","titleModal","setTitleModal","contentModal","setContentModal","refetch","setRefetch","loading","products","getProducts","openCloseModal","prev","onRefetch","addProduct","updateProduct","data","onDelete","result","window","confirm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,kBAAxC,QAAkE,wBAAlE;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,QAA7B;;;AAEA,OAAO,SAASC,YAAT,GAAwB;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEkB,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAqCf,UAAU,EAArD;AAEAN,EAAAA,SAAS,CAAE,MAAMqB,WAAW,EAAnB,EAAuB,CAACJ,OAAD,CAAvB,CAAT;;AAEA,QAAMK,cAAc,GAAG,MAAMV,YAAY,CAAEW,IAAD,IAAU,CAACA,IAAZ,CAAzC;;AACA,QAAMC,SAAS,GAAG,MAAMN,UAAU,CAAEK,IAAD,IAAU,CAACA,IAAZ,CAAlC;;AAEA,QAAME,UAAU,GAAG,MAAK;AACpBX,IAAAA,aAAa,CAAC,gBAAD,CAAb;AACAE,IAAAA,eAAe,eAAC,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEM,cAA7B;AAA8C,MAAA,SAAS,EAAEE;AAAzD;AAAA;AAAA;AAAA;AAAA,YAAD,CAAf;AACAF,IAAAA,cAAc;AACjB,GAJD;;AAMA,QAAMI,aAAa,GAAIC,IAAD,IAAS;AAC3Bb,IAAAA,aAAa,CAAC,qBAAD,CAAb;AACAE,IAAAA,eAAe,eACX,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEM,cAA7B;AAA8C,MAAA,SAAS,EAAEE,SAAzD;AAAoE,MAAA,OAAO,EAAEG;AAA7E;AAAA;AAAA;AAAA;AAAA,YADW,CAAf;AAGAL,IAAAA,cAAc;AACjB,GAND;;AAOA,QAAMM,QAAQ,GAAID,IAAD,IAAQ;AACrB,UAAME,MAAM,GAAGC,MAAM,CAACC,OAAtB;AACH,GAFD;;AAGF,sBACE;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,WAAlB;AAA8B,MAAA,QAAQ,EAAC,gBAAvC;AAAwD,MAAA,QAAQ,EAAEN;AAAlE;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKN,OAAO,gBACJ,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,MAAM,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,gBAKJ,QAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAEC,QAA7B;AAAuC,MAAA,aAAa,EAAEM;AAAtD;AAAA;AAAA;AAAA;AAAA,YAPR,eASI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEf,SAAlB;AAA6B,MAAA,OAAO,EAAEW,cAAtC;AAAsD,MAAA,KAAK,EAAET,UAA7D;AAAyE,MAAA,QAAQ,EAAEE;AAAnF;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADF;AAaD;;GAzCeL,Y;UAK+BJ,U;;;KAL/BI,Y","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Loader } from 'semantic-ui-react';\r\nimport { HeaderPage, TableProductAdmin, AddEditProductForm } from \"../../components/Admin\";\r\nimport { useProduct } from '../../hooks';\r\nimport { ModalBasic } from \"../../components/Common\";\r\nimport { add, initial } from 'lodash';\r\n\r\nexport function ProductAdmin() {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [titleModal, setTitleModal] = useState(null);\r\n    const [contentModal, setContentModal] = useState(null);\r\n    const [refetch, setRefetch] = useState(false);\r\n    const { loading, products, getProducts } = useProduct();\r\n\r\n    useEffect (() => getProducts(), [refetch]);\r\n\r\n    const openCloseModal = () => setShowModal((prev) => !prev);\r\n    const onRefetch = () => setRefetch((prev) => !prev);\r\n    \r\n    const addProduct = () =>{\r\n        setTitleModal(\"Nuevo producto\");\r\n        setContentModal(<AddEditProductForm onClose={openCloseModal}  onRefetch={onRefetch}/>);\r\n        openCloseModal();\r\n    }\r\n\r\n    const updateProduct = (data) =>{\r\n        setTitleModal(\"Actualizar Producto\");\r\n        setContentModal(\r\n            <AddEditProductForm onClose={openCloseModal}  onRefetch={onRefetch} product={data}/>\r\n        );\r\n        openCloseModal();\r\n    };\r\n    const onDelete = (data)=>{\r\n        const result = window.confirm\r\n    }\r\n  return (\r\n    <>\r\n        <HeaderPage title=\"Productos\" btnTitle=\"Nuevo producto\" btnClick={addProduct} />\r\n        {loading ? (\r\n            <Loader active inline=\"centered\">\r\n                Cargando...\r\n            </Loader>\r\n        ):(\r\n            <TableProductAdmin products={products} updateProduct={updateProduct}/>\r\n        )}\r\n        <ModalBasic show={showModal} onClose={openCloseModal} title={titleModal} children={contentModal} />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}