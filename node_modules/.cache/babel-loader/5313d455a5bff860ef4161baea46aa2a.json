{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\components\\\\Admin\\\\Product\\\\AddEditProductForm\\\\AddEditProductForm.js\",\n    _s = $RefreshSig$();\n\nimport { map, multiply } from 'lodash';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Form, Image, Button, Dropdown, Checkbox } from 'semantic-ui-react';\nimport { useCategory } from \"../../../../hooks\";\nimport { useDropzone } from 'react-dropzone';\nimport \"./AddEditProductForm.scss\";\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddEditProductForm() {\n  _s();\n\n  const [categoriesFormat, setCategoriesFormat] = useState([]);\n  const [previewImage, setPreviewImage] = useState(null);\n  const {\n    categories,\n    getCategories\n  } = useCategory();\n  useEffect(() => getCategories(), []);\n  useEffect(() => {\n    setCategoriesFormat(formatDropdownData(categories));\n  }, [categories]);\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(newSchema())\n  });\n  const onDrop = useCallback(async acceptedFile => {\n    const file = acceptedFile[0];\n    setPreviewImage(URL.createObjectURL(file));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    noKeyboard: true,\n    multiple: false,\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"add-edit-product-form\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"title\",\n      placeholder: \"Nombre del producto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      type: \"number\",\n      name: \"price\",\n      placeholder: \"Precio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      placeholder: \"Categor\\xEDa\",\n      fluid: true,\n      selection: true,\n      search: true,\n      options: categoriesFormat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-edit-product-form__active\",\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        toggle: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), \"Producto activo\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      fluid: true,\n      ...getRootProps(),\n      children: \"Subir Imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      src: previewImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      content: \"Crear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditProductForm, \"auuEgs97HTD29S6HQOE+ZIJsbqs=\", false, function () {\n  return [useCategory, useFormik, useDropzone];\n});\n\n_c = AddEditProductForm;\n\nfunction formatDropdownData(data) {\n  return map(data, item => ({\n    key: item.id,\n    text: item.title,\n    value: item.id\n  }));\n}\n\nfunction initialValues() {\n  return {\n    title: \"\",\n    price: \"\",\n    category: \"\",\n    active: false,\n    image: \"\"\n  };\n}\n\nfunction newSchema() {\n  return {\n    title\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditProductForm\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/components/Admin/Product/AddEditProductForm/AddEditProductForm.js"],"names":["map","multiply","React","useState","useEffect","useCallback","Form","Image","Button","Dropdown","Checkbox","useCategory","useDropzone","useFormik","Yup","AddEditProductForm","categoriesFormat","setCategoriesFormat","previewImage","setPreviewImage","categories","getCategories","formatDropdownData","formik","initialValues","validationSchema","object","newSchema","onDrop","acceptedFile","file","URL","createObjectURL","getRootProps","getInputProps","accept","noKeyboard","multiple","data","item","key","id","text","title","value","price","category","active","image"],"mappings":"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","sourcesContent":["import { map, multiply } from 'lodash';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Form, Image, Button, Dropdown, Checkbox } from 'semantic-ui-react';\r\nimport { useCategory } from \"../../../../hooks\";\r\nimport { useDropzone } from 'react-dropzone';\r\nimport \"./AddEditProductForm.scss\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nexport function AddEditProductForm() {\r\n  const [categoriesFormat, setCategoriesFormat] = useState([]);\r\n  const [previewImage, setPreviewImage] = useState(null)\r\n  const { categories, getCategories } = useCategory();\r\n  useEffect(( )=>getCategories(),[]);\r\n  \r\n  useEffect(() => {\r\n    setCategoriesFormat(formatDropdownData(categories));\r\n  }, [categories]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues(),\r\n    validationSchema: Yup.object(newSchema())\r\n  });\r\n\r\n  const onDrop = useCallback(async(acceptedFile)=>{\r\n    const file = acceptedFile[0];\r\n    setPreviewImage(URL.createObjectURL(file));\r\n  },[])\r\n\r\n  \r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/jpeg, image/png\",\r\n    noKeyboard: true,\r\n    multiple: false,\r\n    onDrop,\r\n  })\r\n\r\n  return (\r\n    <Form className='add-edit-product-form'>\r\n      <Form.Input name=\"title\" placeholder=\"Nombre del producto\" />\r\n      <Form.Input type='number' name=\"price\" placeholder=\"Precio\" />\r\n      <Dropdown placeholder='CategorÃ­a' fluid selection search options={categoriesFormat} />\r\n\r\n      <div className='add-edit-product-form__active'>\r\n        <Checkbox toggle />\r\n        Producto activo\r\n      </div>\r\n      <Button type='button' fluid {...getRootProps()}>\r\n        Subir Imagen\r\n      </Button>\r\n      <input {...getInputProps()} />\r\n      <Image src={previewImage} />\r\n      <Button type='submit' primary fluid content=\"Crear\" />\r\n    </Form>\r\n  );\r\n}\r\nfunction formatDropdownData(data){\r\n  return map(data, (item) => ({\r\n    key: item.id,\r\n    text: item.title,\r\n    value: item.id,\r\n  }));\r\n}\r\n\r\nfunction initialValues(){\r\n  return{\r\n    title:\"\",\r\n    price:\"\",\r\n    category:\"\",\r\n    active: false,\r\n    image:\"\",\r\n  };\r\n}\r\n\r\nfunction newSchema(){\r\n  return{\r\n    title\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}