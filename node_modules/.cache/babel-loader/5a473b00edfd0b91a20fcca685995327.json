{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\components\\\\Admin\\\\LoginForm\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./LoginForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LoginForm() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: formValue => {\n      console.log('Login OK');\n      console.log(formValue);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"login-form-admin\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"email\",\n      placeholder: \"Correo electr\\xF3nico\",\n      value: formik.values.email,\n      onChange: formik.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      value: formik.values.password,\n      onChange: formik.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      content: \"Iniciar Sesi\\xF3n\",\n      primary: true,\n      fluid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginForm;\n\nfunction initialValues() {\n  return {\n    email: \"\",\n    password: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    email: Yup.string().email(true).required(true),\n    password: Yup.string().required(true)\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/components/Admin/LoginForm/LoginForm.js"],"names":["React","Button","Form","useFormik","Yup","LoginForm","formik","initialValues","validationSchema","object","onSubmit","formValue","console","log","handleSubmit","values","email","handleChange","password","string","required"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,mBAA3B;AACA,SAAQC,SAAR,QAAyB,QAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,kBAAP;;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAC1B,QAAMC,MAAM,GAAGH,SAAS,CAAC;AACvBI,IAAAA,aAAa,EAAEA,aAAa,EADL;AAEvBC,IAAAA,gBAAgB,EAAEJ,GAAG,CAACK,MAAJ,CAAWD,gBAAgB,EAA3B,CAFK;AAGvBE,IAAAA,QAAQ,EAAGC,SAAD,IAAe;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACD;AANsB,GAAD,CAAxB;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,IAAA,QAAQ,EAAEL,MAAM,CAACQ,YAApD;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AACA,MAAA,IAAI,EAAC,OADL;AAEA,MAAA,WAAW,EAAC,uBAFZ;AAGA,MAAA,KAAK,EAAER,MAAM,CAACS,MAAP,CAAcC,KAHrB;AAG4B,MAAA,QAAQ,EAAEV,MAAM,CAACW;AAH7C;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAC,UAAjC;AAA4C,MAAA,WAAW,EAAC,eAAxD;AAAqE,MAAA,KAAK,EAAEX,MAAM,CAACS,MAAP,CAAcG,QAA1F;AAAoG,MAAA,QAAQ,EAAEZ,MAAM,CAACW;AAArH;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,mBAA9B;AAA+C,MAAA,OAAO,MAAtD;AAAuD,MAAA,KAAK;AAA5D;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnBeZ,S;UACCF,S;;;KADDE,S;;AAqBhB,SAASE,aAAT,GAAwB;AACtB,SAAM;AACJS,IAAAA,KAAK,EAAE,EADH;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAAN;AAID;;AAED,SAASV,gBAAT,GAA2B;AACzB,SAAO;AACLQ,IAAAA,KAAK,EAAEZ,GAAG,CAACe,MAAJ,GAAaH,KAAb,CAAmB,IAAnB,EAAyBI,QAAzB,CAAkC,IAAlC,CADF;AAELF,IAAAA,QAAQ,EAAEd,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,IAAtB;AAFL,GAAP;AAID","sourcesContent":["import React from 'react';\r\nimport {Button, Form} from \"semantic-ui-react\";\r\nimport {useFormik}  from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./LoginForm.scss\";\r\n\r\nexport function LoginForm() {\r\n  const formik = useFormik({\r\n    initialValues: initialValues(),\r\n    validationSchema: Yup.object(validationSchema()),\r\n    onSubmit: (formValue) => {\r\n      console.log('Login OK');\r\n      console.log(formValue)\r\n    },\r\n  });\r\n  return (\r\n    <Form className='login-form-admin' onSubmit={formik.handleSubmit}>\r\n        <Form.Input \r\n        name=\"email\" \r\n        placeholder=\"Correo electrónico\" \r\n        value={formik.values.email} onChange={formik.handleChange} />\r\n        <Form.Input name=\"password\" type=\"password\" placeholder=\"Contraseña\" value={formik.values.password} onChange={formik.handleChange} />\r\n        <Button type=\"submit\" content=\"Iniciar Sesión\" primary fluid />\r\n    </Form>\r\n  )\r\n}\r\n\r\nfunction initialValues(){\r\n  return{\r\n    email: \"\",\r\n    password: \"\",\r\n  }\r\n}\r\n\r\nfunction validationSchema(){\r\n  return {\r\n    email: Yup.string().email(true).required(true),\r\n    password: Yup.string().required(true),\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}