{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\pages\\\\Client\\\\OrdersHistory.js\",\n    _s = $RefreshSig$();\n\nimport { map, size, forEach } from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useOrder, useTable } from \"../../hooks\";\nimport { OrderHistoryItem } from '../../components/Client/';\nimport { ModalConfirm } from \"../../components/Common\";\nimport { Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function OrdersHistory() {\n  _s();\n\n  const [showTypePayment, setShowTypePayment] = useState(false);\n  const {\n    getOrdersByTable,\n    loading,\n    orders\n  } = useOrder();\n  const {\n    getTableByNumber\n  } = useTable();\n  const {\n    tableNumber\n  } = useParams();\n  useEffect(() => {\n    (async () => {\n      const table = await getTableByNumber(tableNumber);\n      const idTable = table[0].id;\n      getOrdersByTable(idTable, \"\", \"ordering=-status,-created_at\");\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Historial de pedidos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [size(orders) > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        fluid: true,\n        onClick: () => setShowTypePayment(true),\n        children: \"Pedir la cuenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), map(orders, order => /*#__PURE__*/_jsxDEV(OrderHistoryItem, {\n        order: order\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ModalConfirm, {\n      title: \"PAgar con tarjeta o efectivo\",\n      show: showTypePayment,\n      onCloseText: \"Efectivo\",\n      onClose: () => console.log(\"Pagar con efectivo\"),\n      onConfirmText: \"Tarjeta\",\n      onConfirm: () => console.log(\"Pagar con tarjeta\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrdersHistory, \"IlgLFyX7UZSMhFBm30dupn1d04w=\", false, function () {\n  return [useOrder, useTable, useParams];\n});\n\n_c = OrdersHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersHistory\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/pages/Client/OrdersHistory.js"],"names":["map","size","forEach","React","useState","useEffect","useParams","useOrder","useTable","OrderHistoryItem","ModalConfirm","Button","OrdersHistory","showTypePayment","setShowTypePayment","getOrdersByTable","loading","orders","getTableByNumber","tableNumber","table","idTable","id","order","console","log"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,OAApB,QAAmC,QAAnC;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,aAAjC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,MAAT,QAAuB,mBAAvB;;;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC5B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAEW,IAAAA,gBAAF;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAAwCV,QAAQ,EAAtD;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAuBV,QAAQ,EAArC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAkBb,SAAS,EAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMe,KAAK,GAAG,MAAMF,gBAAgB,CAACC,WAAD,CAApC;AACA,YAAME,OAAO,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,EAAzB;AAEAP,MAAAA,gBAAgB,CAACM,OAAD,EAAU,EAAV,EAAc,8BAAd,CAAhB;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASF,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQL,OAAO,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH;AAAA,iBAEKf,IAAI,CAACgB,MAAD,CAAJ,GAAe,CAAf,iBACG,QAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,OAAO,EAAE,MAAMH,kBAAkB,CAAC,IAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,EAOKd,GAAG,CAACiB,MAAD,EAAUM,KAAD,iBACT,QAAC,gBAAD;AAAiC,QAAA,KAAK,EAAEA;AAAxC,SAAuBA,KAAK,CAACD,EAA7B;AAAA;AAAA;AAAA;AAAA,cADA,CAPR;AAAA,oBANZ,eAkBQ,QAAC,YAAD;AACI,MAAA,KAAK,EAAC,8BADV;AAEI,MAAA,IAAI,EAAET,eAFV;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,OAAO,EAAE,MAAMW,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAJnB;AAKI,MAAA,aAAa,EAAC,SALlB;AAMI,MAAA,SAAS,EAAE,MAAKD,OAAO,CAACC,GAAR,CAAY,mBAAZ;AANpB;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA5Ceb,a;UAEkCL,Q,EACjBC,Q,EACLF,S;;;KAJZM,a","sourcesContent":["import { map, size, forEach } from 'lodash';\r\nimport React, {useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {useOrder, useTable} from \"../../hooks\";\r\nimport { OrderHistoryItem } from '../../components/Client/';\r\nimport { ModalConfirm } from \"../../components/Common\";\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nexport function OrdersHistory() {\r\n    const [showTypePayment, setShowTypePayment] = useState(false)\r\n    const { getOrdersByTable, loading, orders } = useOrder();\r\n    const { getTableByNumber } = useTable();\r\n    const { tableNumber } = useParams();\r\n\r\n    useEffect(() => {\r\n        (async () =>{\r\n            const table = await getTableByNumber(tableNumber);\r\n            const idTable = table[0].id;\r\n\r\n            getOrdersByTable(idTable, \"\", \"ordering=-status,-created_at\");\r\n        })()\r\n    }, [])\r\n    \r\n  return (\r\n    <div>\r\n        <h1>Historial de pedidos</h1>\r\n        {\r\n            loading ? (\r\n                <p>Cargando...</p>\r\n            ):(\r\n                <>\r\n\r\n                    {size(orders) > 0 && (\r\n                        <Button primary fluid onClick={() => setShowTypePayment(true)}>\r\n                            Pedir la cuenta\r\n                        </Button>\r\n                    )}\r\n                    {map(orders, (order) =>(\r\n                        <OrderHistoryItem key={order.id} order={order} />\r\n                    ))}\r\n                </>\r\n            )}\r\n            <ModalConfirm \r\n                title=\"PAgar con tarjeta o efectivo\" \r\n                show={showTypePayment}\r\n                onCloseText=\"Efectivo\"\r\n                onClose={() => console.log(\"Pagar con efectivo\")}\r\n                onConfirmText=\"Tarjeta\"\r\n                onConfirm={() =>console.log(\"Pagar con tarjeta\")}\r\n             />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}