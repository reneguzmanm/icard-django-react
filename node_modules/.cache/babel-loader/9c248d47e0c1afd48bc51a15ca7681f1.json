{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { getOrdersByTableApi } from \"../api/orders\";\nexport function useOrder() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [orders, setOrders] = useState(null);\n\n  const getOrdersByTable = async (idTable, status, ordering) => {\n    try {\n      setLoading(true);\n      const response = await getOrdersByTableApi(idTable, status, ordering);\n      setLoading(false);\n      setOrders(response);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  return {\n    loading,\n    error,\n    orders,\n    getOrdersByTable\n  };\n}\n\n_s(useOrder, \"18VbEdStdE1T3ZBCxKSB7919Pdk=\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/hooks/useOrder.js"],"names":["useState","getOrdersByTableApi","useOrder","loading","setLoading","error","setError","orders","setOrders","getOrdersByTable","idTable","status","ordering","response"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,eAApC;AAEA,OAAO,SAASC,QAAT,GAAmB;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMS,gBAAgB,GAAG,OAAOC,OAAP,EAAgBC,MAAhB,EAAwBC,QAAxB,KAAqC;AAC1D,QAAI;AACAR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMS,QAAQ,GAAG,MAAMZ,mBAAmB,CAACS,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAA1C;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,SAAS,CAACK,QAAD,CAAT;AACH,KALD,CAKE,OAAOR,KAAP,EAAc;AACZD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,GAVD;;AAWA,SAAM;AACFF,IAAAA,OADE;AAEFE,IAAAA,KAFE;AAGFE,IAAAA,MAHE;AAIFE,IAAAA;AAJE,GAAN;AAMH;;GAtBeP,Q","sourcesContent":["import { useState } from \"react\";\r\nimport { getOrdersByTableApi } from \"../api/orders\";\r\n\r\nexport function useOrder(){\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [orders, setOrders] = useState(null);\r\n\r\n    const getOrdersByTable = async (idTable, status, ordering) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await getOrdersByTableApi(idTable, status, ordering);\r\n            setLoading(false);\r\n            setOrders(response);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setError(error);\r\n        }\r\n    };\r\n    return{\r\n        loading,\r\n        error,\r\n        orders,\r\n        getOrdersByTable,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}