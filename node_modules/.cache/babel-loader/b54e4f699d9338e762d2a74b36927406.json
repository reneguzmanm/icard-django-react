{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\components\\\\Admin\\\\Users\\\\AddEditUserForm\\\\AddEditUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Button, Checkbox } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./AddEditUserForm.scss\";\nimport { useUser } from \"../../../../hooks\";\nimport { functionsIn } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddEditUserForm() {\n  _s();\n\n  const {\n    addUser\n  } = useUser();\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(newSchema()),\n    validateOnChange: false,\n    onSubmit: formValue => {\n      addUser;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"add-edit-user-form\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"username\",\n        placeholder: \"Nombre de usuario\",\n        value: formik.values.username,\n        onChange: formik.handleChange,\n        error: formik.error.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Correo Electr\\xF3nico\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        error: formik.error.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"first_name\",\n        placeholder: \"Nombre\",\n        value: formik.values.username,\n        onChange: formik.handleChange,\n        error: formik.error.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"last_name\",\n        placeholder: \"Apellido\",\n        value: formik.values.last_name,\n        onChange: formik.handleChange,\n        error: formik.error.last_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.error.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-edit-user-form__active\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          toggle: true,\n          checked: formik.values.is_active,\n          onChange: (_, data) => formik.setFieldValue('is_active', data.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), \" Usuario activo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-edit-user-form__active\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          toggle: true,\n          checked: formik.values.is_staff,\n          onChange: (_, data) => formik.setFieldValue('is_staff', data.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), \" Usuario administrador\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        fluid: true,\n        content: \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditUserForm, \"//h1oo/zUhEWE8qjACURxrosimw=\", false, function () {\n  return [useUser, useFormik];\n});\n\n_c = AddEditUserForm;\n\nfunction initialValues() {\n  return {\n    username: \"\",\n    email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    password: \"\",\n    is_active: true,\n    is_staff: false\n  };\n}\n\nfunction newSchema() {\n  return {\n    username: Yup.string().required(true),\n    email: Yup.string().email(true).required(true),\n    first_name: Yup.string(),\n    last_name: Yup.string(),\n    password: Yup.string().required(true),\n    is_active: Yup.bool().required(true),\n    is_staff: Yup.bool().required(true)\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditUserForm\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/components/Admin/Users/AddEditUserForm/AddEditUserForm.js"],"names":["React","Form","Button","Checkbox","useFormik","Yup","useUser","functionsIn","AddEditUserForm","addUser","formik","initialValues","validationSchema","object","newSchema","validateOnChange","onSubmit","formValue","handleSubmit","values","username","handleChange","error","email","last_name","password","is_active","_","data","setFieldValue","checked","is_staff","first_name","string","required","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Form, Button, Checkbox} from \"semantic-ui-react\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./AddEditUserForm.scss\";\r\nimport { useUser } from \"../../../../hooks\";\r\nimport { functionsIn } from 'lodash';\r\n\r\nexport function AddEditUserForm() {\r\n    const { addUser } = useUser();\r\n    const formik = useFormik({\r\n        initialValues: initialValues(),\r\n        validationSchema: Yup.object(newSchema()),\r\n        validateOnChange: false,\r\n        onSubmit: (formValue) =>{\r\n            addUser\r\n        },\r\n    });\r\n  return (\r\n    <div>\r\n        <Form className='add-edit-user-form' onSubmit={formik.handleSubmit}>\r\n            <Form.Input \r\n                name=\"username\" \r\n                placeholder=\"Nombre de usuario\"\r\n                value={formik.values.username}\r\n                onChange={formik.handleChange}\r\n                error={formik.error.username}\r\n                />\r\n            <Form.Input name=\"email\" \r\n                type='email' \r\n                placeholder=\"Correo Electrónico\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                error={formik.error.email}\r\n            />\r\n            <Form.Input \r\n                name=\"first_name\" \r\n                placeholder=\"Nombre\" \r\n                value={formik.values.username}\r\n                onChange={formik.handleChange}\r\n                error={formik.error.username}\r\n            />\r\n            <Form.Input \r\n                name=\"last_name\" \r\n                placeholder=\"Apellido\"\r\n                value={formik.values.last_name}\r\n                onChange={formik.handleChange}\r\n                error={formik.error.last_name}\r\n                />\r\n            <Form.Input \r\n            name=\"password\" \r\n            type=\"password\" \r\n            placeholder=\"Contraseña\" \r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.error.password}\r\n            />\r\n            <div className='add-edit-user-form__active'>\r\n                <Checkbox \r\n                    toggle \r\n                    checked={formik.values.is_active} \r\n                    onChange={(_, data) => formik.setFieldValue('is_active', data.checked)}\r\n                /> Usuario activo\r\n            </div>\r\n            <div className='add-edit-user-form__active'>\r\n                <Checkbox \r\n                    toggle \r\n                    checked={formik.values.is_staff} \r\n                    onChange={(_, data) => formik.setFieldValue('is_staff', data.checked)}\r\n                /> Usuario administrador\r\n            </div>\r\n            <Button type='submit' primary fluid content=\"Crear\" />\r\n        </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction initialValues(){\r\n    return  {\r\n        username: \"\",\r\n        email: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        password: \"\",\r\n        is_active: true,\r\n        is_staff: false,\r\n    }\r\n}\r\n\r\nfunction newSchema(){\r\n    return{\r\n        username: Yup.string().required(true),\r\n        email: Yup.string().email(true).required(true),\r\n        first_name: Yup.string(),\r\n        last_name: Yup.string(),\r\n        password: Yup.string().required(true),\r\n        is_active: Yup.bool().required(true),\r\n        is_staff: Yup.bool().required(true),\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}