{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\components\\\\Admin\\\\Orders\\\\AddOrderForm\\\\AddOrderForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./AddOrderForm.scss\";\nimport { Form, Image, Button, Dropdown } from 'semantic-ui-react';\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport { useProduct } from '../../../../hooks';\nimport { map } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddOrderForm(props) {\n  _s();\n\n  const {\n    idTable,\n    openCLoseModal\n  } = props;\n  const [productsFormat, setProductsFormat] = useState([]);\n  const {\n    products,\n    getProducts\n  } = useProduct();\n  useEffect(() => getProducts(), []);\n  useEffect(() => setProductsFormat(formatDropdownData(products)), [products]);\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema())\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"add-order-form\",\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      placeholder: \"Productos\",\n      fluid: true,\n      selection: true,\n      search: true,\n      options: productsFormat,\n      value: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-order-form__list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      content: \"A\\xF1adir productos a la mesa\",\n      primary: true,\n      fluid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddOrderForm, \"evC9jsnLZPXvQQ+xp8Gh6w1GSyY=\", false, function () {\n  return [useProduct, useFormik];\n});\n\n_c = AddOrderForm;\n\nfunction formatDropdownData(data) {\n  return map(data, item => ({\n    key: item.id,\n    text: item.title,\n    value: item.id\n  }));\n}\n\nfunction initialValues() {\n  return {\n    products: []\n  };\n}\n\nfunction validationSchema() {\n  return {\n    products: Yup.array().required(true)\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrderForm\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/components/Admin/Orders/AddOrderForm/AddOrderForm.js"],"names":["React","useState","useEffect","Form","Image","Button","Dropdown","useFormik","Yup","useProduct","map","AddOrderForm","props","idTable","openCLoseModal","productsFormat","setProductsFormat","products","getProducts","formatDropdownData","formik","initialValues","validationSchema","object","data","item","key","id","text","title","value","array","required"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,qBAAP;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,mBAA9C;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,GAAT,QAAoB,QAApB;;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAChC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAA4BF,KAAlC;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM;AAACgB,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BT,UAAU,EAA1C;AAEAP,EAAAA,SAAS,CAAC,MAAMgB,WAAW,EAAlB,EAAsB,EAAtB,CAAT;AACAhB,EAAAA,SAAS,CAAC,MAAMc,iBAAiB,CAACG,kBAAkB,CAACF,QAAD,CAAnB,CAAxB,EAAwD,CAACA,QAAD,CAAxD,CAAT;AAEA,QAAMG,MAAM,GAAGb,SAAS,CAAC;AACrBc,IAAAA,aAAa,EAAEA,aAAa,EADP;AAErBC,IAAAA,gBAAgB,EAAEd,GAAG,CAACe,MAAJ,CAAWD,gBAAgB,EAA3B;AAFG,GAAD,CAAxB;AAMF,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA,4BACI,QAAC,QAAD;AACI,MAAA,WAAW,EAAC,WADhB;AAEI,MAAA,KAAK,MAFT;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,MAAM,MAJV;AAKI,MAAA,OAAO,EAAEP,cALb;AAMI,MAAA,KAAK,EAAE;AANX;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,+BAA9B;AAA2D,MAAA,OAAO,MAAlE;AAAmE,MAAA,KAAK;AAAxE;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA9BeJ,Y;UAGoBF,U,EAKjBF,S;;;KARHI,Y;;AAgChB,SAASQ,kBAAT,CAA4BK,IAA5B,EAAiC;AAC7B,SAAOd,GAAG,CAACc,IAAD,EAAQC,IAAD,KAAW;AACxBC,IAAAA,GAAG,EAAED,IAAI,CAACE,EADc;AAExBC,IAAAA,IAAI,EAAEH,IAAI,CAACI,KAFa;AAGxBC,IAAAA,KAAK,EAAEL,IAAI,CAACE;AAHY,GAAX,CAAP,CAAV;AAKH;;AAED,SAASN,aAAT,GAAwB;AACpB,SAAM;AACFJ,IAAAA,QAAQ,EAAE;AADR,GAAN;AAGH;;AAED,SAASK,gBAAT,GAA2B;AACvB,SAAM;AACFL,IAAAA,QAAQ,EAAET,GAAG,CAACuB,KAAJ,GAAYC,QAAZ,CAAqB,IAArB;AADR,GAAN;AAGH","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport \"./AddOrderForm.scss\";\r\nimport { Form, Image, Button, Dropdown } from 'semantic-ui-react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport { useProduct } from '../../../../hooks';\r\nimport { map } from 'lodash';\r\n\r\nexport function AddOrderForm(props) {\r\n    const {idTable, openCLoseModal} = props;\r\n    const [productsFormat, setProductsFormat] = useState([])\r\n    const {products, getProducts} = useProduct();\r\n\r\n    useEffect(() => getProducts(), []);\r\n    useEffect(() => setProductsFormat(formatDropdownData(products)), [products]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues(),\r\n        validationSchema: Yup.object(validationSchema())\r\n    })\r\n\r\n    \r\n  return (\r\n    <Form className='add-order-form'>\r\n        <Dropdown \r\n            placeholder='Productos' \r\n            fluid \r\n            selection \r\n            search \r\n            options={productsFormat} \r\n            value={null}\r\n        />\r\n        <div className='add-order-form__list'>\r\n            {/* for de productos seleccionados*/}\r\n        </div>\r\n        <Button type='submit' content=\"AÃ±adir productos a la mesa\" primary fluid />\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction formatDropdownData(data){\r\n    return map(data, (item) => ({\r\n        key: item.id,\r\n        text: item.title,\r\n        value: item.id,\r\n    }))\r\n}\r\n\r\nfunction initialValues(){\r\n    return{\r\n        products: [],\r\n    }\r\n}\r\n\r\nfunction validationSchema(){\r\n    return{\r\n        products: Yup.array().required(true)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}