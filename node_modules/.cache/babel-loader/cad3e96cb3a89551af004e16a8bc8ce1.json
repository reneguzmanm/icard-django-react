{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\components\\\\Admin\\\\Table\\\\AddEditTableForm\\\\AddEditTableForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport { useTable } from '../../../../hooks';\nimport \"./AddEditTableForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddEditTableForm(props) {\n  _s();\n\n  const {\n    onClose\n  } = props;\n  const {\n    addTable\n  } = useTable();\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    validateOnChange: false,\n    onSubmit: async formValue => {\n      await addTable(formValue);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"add-edit-table-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"number\",\n      type: \"number\",\n      placeholder: \"N\\xFAmero de la mesa\",\n      value: formik.values.number,\n      onChange: formik.handleChange,\n      error: formik.errors.number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      content: \"Crear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditTableForm, \"Y7J23WPV185780D52RcRS7iN1R0=\", false, function () {\n  return [useTable, useFormik];\n});\n\n_c = AddEditTableForm;\n\nfunction initialValues() {\n  return {\n    number: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    number: Yup.number().required(true)\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditTableForm\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/components/Admin/Table/AddEditTableForm/AddEditTableForm.js"],"names":["React","Form","Button","useFormik","Yup","useTable","AddEditTableForm","props","onClose","addTable","formik","initialValues","validationSchema","object","validateOnChange","onSubmit","formValue","handleSubmit","values","number","handleChange","errors","required"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAO,yBAAP;;AAGA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAEtC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeJ,QAAQ,EAA7B;AACA,QAAMK,MAAM,GAAGP,SAAS,CAAC;AACvBQ,IAAAA,aAAa,EAAEA,aAAa,EADL;AAEvBC,IAAAA,gBAAgB,EAAER,GAAG,CAACS,MAAJ,CAAWD,gBAAgB,EAA3B,CAFK;AAGvBE,IAAAA,gBAAgB,EAAE,KAHK;AAIvBC,IAAAA,QAAQ,EAAE,MAAOC,SAAP,IAAoB;AAC5B,YAAMP,QAAQ,CAACO,SAAD,CAAd;AACD;AANsB,GAAD,CAAxB;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAsC,IAAA,QAAQ,EAAEN,MAAM,CAACO,YAAvD;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,WAAW,EAAC,sBAHd;AAIE,MAAA,KAAK,EAAEP,MAAM,CAACQ,MAAP,CAAcC,MAJvB;AAKE,MAAA,QAAQ,EAAET,MAAM,CAACU,YALnB;AAME,MAAA,KAAK,EAAEV,MAAM,CAACW,MAAP,CAAcF;AANvB;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,MAA7B;AAA8B,MAAA,KAAK,MAAnC;AAAoC,MAAA,OAAO,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAzBeb,gB;UAGOD,Q,EACNF,S;;;KAJDG,gB;;AA0BhB,SAASK,aAAT,GAAwB;AACtB,SAAM;AACJQ,IAAAA,MAAM,EAAE;AADJ,GAAN;AAGD;;AAED,SAASP,gBAAT,GAA2B;AACzB,SAAM;AACJO,IAAAA,MAAM,EAAEf,GAAG,CAACe,MAAJ,GAAaG,QAAb,CAAsB,IAAtB;AADJ,GAAN;AAGD","sourcesContent":["import React from 'react';\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport { useTable } from '../../../../hooks';\r\nimport \"./AddEditTableForm.scss\";\r\n\r\n\r\nexport function AddEditTableForm(props) {\r\n\r\n  const { onClose } = props;\r\n  const { addTable } = useTable();\r\n  const formik = useFormik({\r\n    initialValues: initialValues(),\r\n    validationSchema: Yup.object(validationSchema()),\r\n    validateOnChange: false,\r\n    onSubmit: async (formValue) =>{\r\n      await addTable(formValue);\r\n    },\r\n  });\r\n  return (\r\n    <Form className='add-edit-table-form' onSubmit={formik.handleSubmit} >\r\n      <Form.Input \r\n        name=\"number\" \r\n        type='number' \r\n        placeholder=\"NÃºmero de la mesa\" \r\n        value={formik.values.number}\r\n        onChange={formik.handleChange}\r\n        error={formik.errors.number}\r\n      />\r\n      <Button type='submit' primary fluid content=\"Crear\" />\r\n    </Form>\r\n  )\r\n}\r\nfunction initialValues(){\r\n  return{\r\n    number: \"\",\r\n  };\r\n}\r\n\r\nfunction validationSchema(){\r\n  return{\r\n    number: Yup.number().required(true),\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}