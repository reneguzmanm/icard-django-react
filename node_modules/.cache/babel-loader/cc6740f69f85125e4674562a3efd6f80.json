{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\components\\\\Admin\\\\Category\\\\AddEditCategoryForm\\\\AddEditCategoryForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport \"./AddEditCategoryForm.scss\";\nimport { Form, Image, Button } from \"semantic-ui-react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport { useCategory } from \"../../../../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddEditCategoryForm(props) {\n  _s();\n\n  const {\n    onClose\n  } = props;\n  const [previewImage, setPreviewImage] = useState(null);\n  const {\n    addCategory\n  } = useCategory();\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(newSchema()),\n    validateOnChange: false,\n    onSubmit: async formValue => {\n      try {\n        await addCategory(formValue);\n        console.log(\"Formulario enviado\");\n        console.log(formValue);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n  const onDrop = useCallback(async acceptedFile => {\n    const file = acceptedFile[0];\n    await formik.setFieldValue('image', file);\n    setPreviewImage(URL.createObjectURL(file));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/jpeg, image/png',\n    noKeyboard: true,\n    multiple: false,\n    onDrop: onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"add-edit-category-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"title\",\n      placeholder: \"Nombre de la categor\\xEDa\",\n      value: formik.values.title,\n      onChange: formik.handleChange,\n      error: formik.errors.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      fluid: true,\n      color: formik.errors.image && \"red\",\n      ...getRootProps(),\n      children: \"Subir imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      src: previewImage,\n      fluid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      content: \"Crear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditCategoryForm, \"Uq4WyhMq+Vd5B0Chn0y7KpB4tdI=\", false, function () {\n  return [useCategory, useFormik, useDropzone];\n});\n\n_c = AddEditCategoryForm;\n\nfunction initialValues() {\n  return {\n    title: \"\",\n    image: \"\"\n  };\n}\n\nfunction newSchema() {\n  return {\n    title: Yup.string().required(true),\n    image: Yup.string().required(true)\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditCategoryForm\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/components/Admin/Category/AddEditCategoryForm/AddEditCategoryForm.js"],"names":["React","useState","useCallback","Form","Image","Button","useDropzone","useFormik","Yup","useCategory","AddEditCategoryForm","props","onClose","previewImage","setPreviewImage","addCategory","formik","initialValues","validationSchema","object","newSchema","validateOnChange","onSubmit","formValue","console","log","error","onDrop","acceptedFile","file","setFieldValue","URL","createObjectURL","getRootProps","getInputProps","accept","noKeyboard","multiple","handleSubmit","values","title","handleChange","errors","image","string","required"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport \"./AddEditCategoryForm.scss\"\r\nimport {Form, Image, Button} from \"semantic-ui-react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport { useCategory } from \"../../../../hooks\";\r\n\r\nexport function AddEditCategoryForm(props) {\r\n  const { onClose } = props;\r\n  const [previewImage, setPreviewImage] = useState(null);\r\n  const { addCategory } = useCategory();\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues(),\r\n    validationSchema: Yup.object(newSchema()),\r\n    validateOnChange: false,\r\n    onSubmit: async (formValue) =>{\r\n      try {\r\n        await addCategory(formValue);\r\n        console.log(\"Formulario enviado\");\r\n        console.log(formValue);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      \r\n    }\r\n  })\r\n  const onDrop = useCallback(async (acceptedFile) => {\r\n    const file = acceptedFile[0];\r\n    await formik.setFieldValue('image', file);\r\n    setPreviewImage(URL.createObjectURL(file));\r\n  }, [])\r\n  \r\n  const { getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/jpeg, image/png',\r\n    noKeyboard: true,\r\n    multiple: false,\r\n    onDrop: onDrop,\r\n  });\r\n\r\n  return (\r\n    <Form className='add-edit-category-form' onSubmit={formik.handleSubmit}>\r\n      <Form.Input \r\n        name=\"title\" \r\n        placeholder=\"Nombre de la categorÃ­a\" \r\n        value={formik.values.title} \r\n        onChange={formik.handleChange}\r\n        error={formik.errors.title}  \r\n      />\r\n      <Button\r\n        type='button' fluid color={formik.errors.image && \"red\"} {...getRootProps()} >\r\n          Subir imagen\r\n        </Button>\r\n        <input {...getInputProps} />\r\n        <Image src={previewImage} fluid />\r\n        <Button type='submit' primary fluid content=\"Crear\" />\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction initialValues(){\r\n  return{\r\n    title: \"\",\r\n    image: \"\"\r\n  };\r\n}\r\n\r\nfunction newSchema(){\r\n  return{\r\n    title: Yup.string().required(true),\r\n    image: Yup.string().required(true),\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}