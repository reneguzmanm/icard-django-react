{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\components\\\\Admin\\\\Users\\\\AddEditUserForm\\\\AddEditUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Button, Checkbox } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./AddEditUserForm.scss\";\nimport { useUser } from \"../../../../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddEditUserForm(props) {\n  _s();\n\n  const {\n    onClose,\n    onRefetch,\n    user\n  } = props;\n  const {\n    addUser,\n    updateUser\n  } = useUser();\n  const formik = useFormik({\n    initialValues: initialValues(user),\n    validationSchema: Yup.object(user ? updateSchema() : newSchema()),\n    validateOnChange: false,\n    onSubmit: async formValue => {\n      try {\n        if (user) await updateUser(user.id, formValue);else await addUser(formValue);\n        onRefetch();\n        onClose();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"add-edit-user-form\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"username\",\n        placeholder: \"Nombre de usuario\",\n        value: formik.values.username,\n        onChange: formik.handleChange,\n        error: formik.errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Correo Electr\\xF3nico\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        error: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"first_name\",\n        placeholder: \"Nombre\",\n        value: formik.values.first_name,\n        onChange: formik.handleChange,\n        error: formik.errors.first_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"last_name\",\n        placeholder: \"Apellido\",\n        value: formik.values.last_name,\n        onChange: formik.handleChange,\n        error: formik.errors.last_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-edit-user-form__active\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          toggle: true,\n          checked: formik.values.is_active,\n          onChange: (_, data) => formik.setFieldValue('is_active', data.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), \" Usuario activo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-edit-user-form__active\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          toggle: true,\n          checked: formik.values.is_staff,\n          onChange: (_, data) => formik.setFieldValue('is_staff', data.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), \" Usuario administrador\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        fluid: true,\n        content: user ? \"Actualizar\" : \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditUserForm, \"2IkJSJMnKGEiZ3fTujUYa8Rm4gg=\", false, function () {\n  return [useUser, useFormik];\n});\n\n_c = AddEditUserForm;\n\nfunction initialValues(data) {\n  return {\n    username: (data === null || data === void 0 ? void 0 : data.username) || \"\",\n    email: (data === null || data === void 0 ? void 0 : data.email) || \"\",\n    first_name: (data === null || data === void 0 ? void 0 : data.first_name) || \"\",\n    last_name: (data === null || data === void 0 ? void 0 : data.last_name) || \"\",\n    password: \"\",\n    is_active: data !== null && data !== void 0 && data.is_active ? true : false,\n    is_staff: data !== null && data !== void 0 && data.is_staff ? true : false\n  };\n}\n\nfunction newSchema() {\n  return {\n    username: Yup.string().required(true),\n    email: Yup.string().email(true).required(true),\n    first_name: Yup.string(),\n    last_name: Yup.string(),\n    password: Yup.string().required(true),\n    is_active: Yup.bool().required(true),\n    is_staff: Yup.bool().required(true)\n  };\n}\n\nfunction updateSchema() {\n  return {\n    username: Yup.string().required(true),\n    email: Yup.string().email(true).required(true),\n    first_name: Yup.string(),\n    last_name: Yup.string(),\n    password: Yup.string(),\n    is_active: Yup.bool().required(true),\n    is_staff: Yup.bool().required(true)\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditUserForm\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/components/Admin/Users/AddEditUserForm/AddEditUserForm.js"],"names":["React","Form","Button","Checkbox","useFormik","Yup","useUser","AddEditUserForm","props","onClose","onRefetch","user","addUser","updateUser","formik","initialValues","validationSchema","object","updateSchema","newSchema","validateOnChange","onSubmit","formValue","id","error","console","handleSubmit","values","username","handleChange","errors","email","first_name","last_name","password","is_active","_","data","setFieldValue","checked","is_staff","string","required","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Form, Button, Checkbox} from \"semantic-ui-react\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./AddEditUserForm.scss\";\r\nimport { useUser } from \"../../../../hooks\";\r\n\r\nexport function AddEditUserForm(props) {\r\n    const { onClose, onRefetch, user } = props;\r\n    const { addUser, updateUser } = useUser();\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues(user),\r\n        validationSchema: Yup.object(user ? updateSchema() : newSchema()),\r\n        validateOnChange: false,\r\n        onSubmit: async (formValue) =>{\r\n            try{\r\n                if (user) await updateUser(user.id, formValue);\r\n                else await addUser(formValue);\r\n\r\n                onRefetch();\r\n                onClose();\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        },\r\n    });\r\n  return (\r\n    <div>\r\n        <Form className='add-edit-user-form' onSubmit={formik.handleSubmit}>\r\n            <Form.Input \r\n                name=\"username\" \r\n                placeholder=\"Nombre de usuario\"\r\n                value={formik.values.username}\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.username}\r\n                />\r\n            <Form.Input \r\n                name=\"email\" \r\n                type='email' \r\n                placeholder=\"Correo Electrónico\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.email}\r\n            />\r\n            <Form.Input \r\n                name=\"first_name\" \r\n                placeholder=\"Nombre\" \r\n                value={formik.values.first_name}\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.first_name}\r\n            />\r\n            <Form.Input \r\n                name=\"last_name\" \r\n                placeholder=\"Apellido\"\r\n                value={formik.values.last_name}\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.last_name}\r\n                />\r\n            <Form.Input \r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Contraseña\" \r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.password}\r\n            />\r\n            <div className='add-edit-user-form__active'>\r\n                <Checkbox \r\n                    toggle \r\n                    checked={formik.values.is_active} \r\n                    onChange={(_, data) => formik.setFieldValue('is_active', data.checked)}\r\n                /> Usuario activo\r\n            </div>\r\n            <div className='add-edit-user-form__active'>\r\n                <Checkbox \r\n                    toggle \r\n                    checked={formik.values.is_staff} \r\n                    onChange={(_, data) => formik.setFieldValue('is_staff', data.checked)}\r\n                /> Usuario administrador\r\n            </div>\r\n            <Button type='submit' primary fluid content={user ? \"Actualizar\" : \"Crear\"} />\r\n        </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction initialValues(data){\r\n    return  {\r\n        username: data?.username || \"\",\r\n        email: data?.email || \"\",\r\n        first_name: data?.first_name || \"\",\r\n        last_name: data?.last_name || \"\",\r\n        password: \"\",\r\n        is_active: data?.is_active? true : false,\r\n        is_staff: data?.is_staff ? true : false,\r\n    };\r\n}\r\n\r\nfunction newSchema(){\r\n    return{\r\n        username: Yup.string().required(true),\r\n        email: Yup.string().email(true).required(true),\r\n        first_name: Yup.string(),\r\n        last_name: Yup.string(),\r\n        password: Yup.string().required(true),\r\n        is_active: Yup.bool().required(true),\r\n        is_staff: Yup.bool().required(true),\r\n    }\r\n}\r\n\r\nfunction updateSchema(){\r\n    return{\r\n        username: Yup.string().required(true),\r\n        email: Yup.string().email(true).required(true),\r\n        first_name: Yup.string(),\r\n        last_name: Yup.string(),\r\n        password: Yup.string(),\r\n        is_active: Yup.bool().required(true),\r\n        is_staff: Yup.bool().required(true),\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}