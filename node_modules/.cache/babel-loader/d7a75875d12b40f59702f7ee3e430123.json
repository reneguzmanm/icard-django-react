{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursos\\\\Full\\\\icard\\\\icard_react\\\\icard\\\\src\\\\components\\\\Admin\\\\Product\\\\AddEditProductForm\\\\AddEditProductForm.js\",\n    _s = $RefreshSig$();\n\nimport { map, multiply } from 'lodash';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Form, Image, Button, Dropdown, Checkbox } from 'semantic-ui-react';\nimport { useCategory, useProduct } from \"../../../../hooks\";\nimport { useDropzone } from 'react-dropzone';\nimport \"./AddEditProductForm.scss\";\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddEditProductForm(props) {\n  _s();\n\n  const {\n    onClose,\n    onRefetch,\n    product\n  } = props;\n  const [categoriesFormat, setCategoriesFormat] = useState([]);\n  const [previewImage, setPreviewImage] = useState(product ? product.image : null);\n  const {\n    categories,\n    getCategories\n  } = useCategory();\n  const {\n    addProduct\n  } = useProduct();\n  useEffect(() => getCategories(), []);\n  useEffect(() => {\n    setCategoriesFormat(formatDropdownData(categories));\n  }, [categories]);\n  const formik = useFormik({\n    initialValues: initialValues(product),\n    validationSchema: Yup.object(product ? updateSchema() : newSchema()),\n    validateOnChange: false,\n    onSubmit: async formValue => {\n      await addProduct(formValue);\n      onRefetch();\n      onClose();\n    }\n  });\n  const onDrop = useCallback(async acceptedFile => {\n    const file = acceptedFile[0];\n    await formik.setFieldValue(\"image\", file);\n    setPreviewImage(URL.createObjectURL(file));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    noKeyboard: true,\n    multiple: false,\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"add-edit-product-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"title\",\n      placeholder: \"Nombre del producto\",\n      value: formik.values.title,\n      onChange: formik.handleChange,\n      error: formik.errors.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      type: \"number\",\n      name: \"price\",\n      placeholder: \"Precio\",\n      value: formik.values.price,\n      onChange: formik.handleChange,\n      error: formik.errors.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      placeholder: \"Categor\\xEDa\",\n      fluid: true,\n      selection: true,\n      search: true,\n      options: categoriesFormat,\n      value: formik.values.category,\n      error: formik.errors.category,\n      onChange: (_, data) => formik.setFieldValue(\"category\", data.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-edit-product-form__active\",\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        toggle: true,\n        checked: formik.values.active,\n        onChange: (_, data) => formik.setFieldValue('active', data.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), \"Producto activo\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      fluid: true,\n      ...getRootProps(),\n      color: formik.errors.image && \"red\",\n      children: previewImage ? \"Cambiar imagen\" : \"Subir imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      src: previewImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      content: \"Crear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditProductForm, \"B4vProWICNikqDUAmcGUXyU9wo8=\", false, function () {\n  return [useCategory, useProduct, useFormik, useDropzone];\n});\n\n_c = AddEditProductForm;\n\nfunction formatDropdownData(data) {\n  return map(data, item => ({\n    key: item.id,\n    text: item.title,\n    value: item.id\n  }));\n}\n\nfunction initialValues(data) {\n  return {\n    title: (data === null || data === void 0 ? void 0 : data.title) || \"\",\n    price: (data === null || data === void 0 ? void 0 : data.price) || \"\",\n    category: (data === null || data === void 0 ? void 0 : data.category) || \"\",\n    active: data !== null && data !== void 0 && data.active ? true : false,\n    image: \"\"\n  };\n}\n\nfunction newSchema() {\n  return {\n    title: Yup.string().required(true),\n    price: Yup.number().required(true),\n    category: Yup.number().required(true),\n    active: Yup.boolean().required(true),\n    image: Yup.string().required(true)\n  };\n}\n\nfunction updateSchema() {\n  return {\n    title: Yup.string().required(true),\n    price: Yup.number().required(true),\n    category: Yup.number().required(true),\n    active: Yup.boolean().required(true),\n    image: Yup.string()\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditProductForm\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/components/Admin/Product/AddEditProductForm/AddEditProductForm.js"],"names":["map","multiply","React","useState","useEffect","useCallback","Form","Image","Button","Dropdown","Checkbox","useCategory","useProduct","useDropzone","useFormik","Yup","AddEditProductForm","props","onClose","onRefetch","product","categoriesFormat","setCategoriesFormat","previewImage","setPreviewImage","image","categories","getCategories","addProduct","formatDropdownData","formik","initialValues","validationSchema","object","updateSchema","newSchema","validateOnChange","onSubmit","formValue","onDrop","acceptedFile","file","setFieldValue","URL","createObjectURL","getRootProps","getInputProps","accept","noKeyboard","multiple","handleSubmit","values","title","handleChange","errors","price","category","_","data","value","active","checked","item","key","id","text","string","required","number","boolean"],"mappings":"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","sourcesContent":["import { map, multiply } from 'lodash';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Form, Image, Button, Dropdown, Checkbox } from 'semantic-ui-react';\r\nimport { useCategory, useProduct } from \"../../../../hooks\";\r\nimport { useDropzone } from 'react-dropzone';\r\nimport \"./AddEditProductForm.scss\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nexport function AddEditProductForm(props) {\r\n  const { onClose, onRefetch, product } = props;\r\n  const [categoriesFormat, setCategoriesFormat] = useState([]);\r\n  const [previewImage, setPreviewImage] = useState(product ? product.image : null);\r\n  const { categories, getCategories } = useCategory();\r\n  const { addProduct } = useProduct();\r\n\r\n  useEffect(()=>getCategories(),[]);\r\n  \r\n  useEffect(() => {\r\n    setCategoriesFormat(formatDropdownData(categories));\r\n  }, [categories]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues(product),\r\n    validationSchema: Yup.object(product ? updateSchema() : newSchema()),\r\n    validateOnChange: false,\r\n    onSubmit: async (formValue) => {\r\n      await addProduct(formValue);\r\n      onRefetch();\r\n      onClose();\r\n    }\r\n  });\r\n\r\n  const onDrop = useCallback(async(acceptedFile)=>{\r\n    const file = acceptedFile[0];\r\n    await formik.setFieldValue(\"image\", file);\r\n    setPreviewImage(URL.createObjectURL(file));\r\n  },[])\r\n\r\n  \r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/jpeg, image/png\",\r\n    noKeyboard: true,\r\n    multiple: false,\r\n    onDrop,\r\n  })\r\n\r\n  return (\r\n    <Form className='add-edit-product-form' onSubmit={formik.handleSubmit}>\r\n      <Form.Input \r\n        name=\"title\" \r\n        placeholder=\"Nombre del producto\" \r\n        value={formik.values.title}\r\n        onChange={formik.handleChange}\r\n        error={formik.errors.title}\r\n      />\r\n      <Form.Input \r\n        type=\"number\" \r\n        name=\"price\" \r\n        placeholder=\"Precio\"\r\n        value={formik.values.price} \r\n        onChange={formik.handleChange}\r\n        error={formik.errors.price}\r\n      />\r\n      <Dropdown \r\n        placeholder='Categoría' \r\n        fluid \r\n        selection \r\n        search \r\n        options={categoriesFormat}\r\n        value={formik.values.category}\r\n        error={formik.errors.category}\r\n        onChange={(_,data)=> formik.setFieldValue(\"category\", data.value)}\r\n      />\r\n\r\n      <div className='add-edit-product-form__active'>\r\n        <Checkbox \r\n          toggle \r\n          checked={formik.values.active} \r\n          onChange={(_,data) => formik.setFieldValue('active', data.checked)}\r\n        />\r\n        Producto activo\r\n      </div>\r\n      <Button type='button' fluid {...getRootProps()} color={formik.errors.image && \"red\"}>\r\n        {previewImage ? \"Cambiar imagen\" : \"Subir imagen\"}\r\n      </Button>\r\n      <input {...getInputProps()} />\r\n      <Image src={previewImage} />\r\n      <Button type='submit' primary fluid content=\"Crear\" />\r\n    </Form>\r\n  );\r\n}\r\nfunction formatDropdownData(data){\r\n  return map(data, (item) => ({\r\n    key: item.id,\r\n    text: item.title,\r\n    value: item.id,\r\n  }));\r\n}\r\n\r\nfunction initialValues(data){\r\n  return{\r\n    title: data?.title || \"\",\r\n    price: data?.price || \"\",\r\n    category: data?.category || \"\",\r\n    active: data?.active ? true : false,\r\n    image:\"\",\r\n  };\r\n}\r\n\r\nfunction newSchema(){\r\n  return{\r\n    title: Yup.string().required(true),\r\n    price: Yup.number().required(true),\r\n    category: Yup.number().required(true),\r\n    active: Yup.boolean().required(true),\r\n    image: Yup.string().required(true),\r\n  };\r\n}\r\n\r\nfunction updateSchema(){\r\n  return{\r\n    title: Yup.string().required(true),\r\n    price: Yup.number().required(true),\r\n    category: Yup.number().required(true),\r\n    active: Yup.boolean().required(true),\r\n    image: Yup.string(),\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}