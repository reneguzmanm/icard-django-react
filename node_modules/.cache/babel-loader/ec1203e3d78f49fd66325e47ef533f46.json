{"ast":null,"code":"import { result } from \"lodash\";\nimport { BASE_API, ORDER_STATUS } from \"../utils/constants\";\nexport async function getOrdersByTableApi(idTable) {\n  let status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  let ordering = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n  try {\n    const tableFilter = `table=${idTable}`;\n    const statusFilter = `status=${status}`;\n    const closeFilter = 'close=False';\n    const url = `${BASE_API}/api/orders/?${tableFilter}&${statusFilter}&${closeFilter}&${ordering}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function checkDeliveredApi(id) {\n  try {\n    const url = `${BASE_API}/api/orders/${id}/`;\n    const params = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        status: ORDER_STATUS.DELIVERED\n      })\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function AddOrderToTableApi(idTable, idProduct) {\n  try {\n    const url = `${BASE_API}/api/orders/`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        status: ORDER_STATUS.PENDING,\n        table: idTable,\n        product: idProduct\n      })\n    };\n    await fetch(url, params);\n  } catch (error) {\n    throw error;\n  }\n}\n_c = AddOrderToTableApi;\nexport async function addPaymentToOrderApi(idOrder, idPayment) {\n  try {\n    const url = `${BASE_API}/api/orders/${idOrder}/`;\n    const params = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        payment: idPayment\n      })\n    };\n    await fetch(url, params);\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function closeOrderApi(idOrder) {\n  try {\n    const url = `${BASE_API}/api/orders/${idOrder}/`;\n    const params = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        close: true\n      })\n    };\n    await fetch(url, params);\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function getOrdersByPaymentApi(idPayment) {\n  try {\n    console.log(\"hola\", idPayment);\n    const paymentFilter = `payment=${idPayment}`;\n    const url = `${BASE_API}/api/orders/?${paymentFilter}`;\n    const response = await fetch(url);\n    result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrderToTableApi\");","map":{"version":3,"sources":["C:/Cursos/Full/icard/icard_react/icard/src/api/orders.js"],"names":["result","BASE_API","ORDER_STATUS","getOrdersByTableApi","idTable","status","ordering","tableFilter","statusFilter","closeFilter","url","response","fetch","json","error","checkDeliveredApi","id","params","method","headers","body","JSON","stringify","DELIVERED","AddOrderToTableApi","idProduct","PENDING","table","product","addPaymentToOrderApi","idOrder","idPayment","payment","closeOrderApi","close","getOrdersByPaymentApi","console","log","paymentFilter"],"mappings":"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","sourcesContent":["import { result } from \"lodash\";\r\nimport { BASE_API, ORDER_STATUS } from \"../utils/constants\";\r\n\r\nexport async function getOrdersByTableApi(idTable, status=\"\", ordering=\"\"){\r\n    try {\r\n        const tableFilter = `table=${idTable}`;\r\n        const statusFilter = `status=${status}`;\r\n        const closeFilter = 'close=False';\r\n\r\n        const url = `${BASE_API}/api/orders/?${tableFilter}&${statusFilter}&${closeFilter}&${ordering}`;\r\n        const response = await fetch(url);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        throw  error;\r\n    }\r\n}\r\n\r\nexport async function checkDeliveredApi(id){\r\n    try {\r\n        const url = `${BASE_API}/api/orders/${id}/`;\r\n        const params = {\r\n            method: \"PATCH\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                status: ORDER_STATUS.DELIVERED\r\n            })\r\n        }\r\n\r\n        const response = await fetch(url, params);\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function AddOrderToTableApi(idTable, idProduct){\r\n    try {\r\n        const url = `${BASE_API}/api/orders/`;\r\n        const params = {\r\n            method: \"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                status: ORDER_STATUS.PENDING,\r\n                table: idTable,\r\n                product: idProduct\r\n            }),\r\n        };\r\n        await fetch(url, params);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function addPaymentToOrderApi(idOrder, idPayment){\r\n    try {\r\n        const url = `${BASE_API}/api/orders/${idOrder}/`;\r\n        const params= {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                payment: idPayment,\r\n            }),\r\n        }\r\n        await fetch(url, params);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function closeOrderApi(idOrder){\r\n    try {\r\n        const url = `${BASE_API}/api/orders/${idOrder}/`;\r\n        const params = {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                close: true,\r\n            }),\r\n        };\r\n        await fetch(url, params);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport async function getOrdersByPaymentApi(idPayment){\r\n    try {\r\n        console.log(\"hola\",idPayment);\r\n        const paymentFilter = `payment=${idPayment}`;\r\n        \r\n        const url = `${BASE_API}/api/orders/?${paymentFilter}`;\r\n        const response = await fetch(url);\r\n        result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}